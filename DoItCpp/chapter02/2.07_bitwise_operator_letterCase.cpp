/*
 * 비트 연산자를 이용한 대소문자 변환

 아스키 코드에서 대문자와 소문자를 변환할 때 비트 연산으로 변환이 가능하다

ASCII Code 'A'는 65번으로 2진수 - 1 0 0 0 0 0 1
ASCII Code 'a'는 96번으로 2진수 - 1 1 0 0 0 0 1

2진수 A가 a가 되기 위해서 필요한 것은 32번에 해당하는 2진수 값이 1이 되어야함
    1 0 0 0 0 0 1 : A
    0 1 0 0 0 0 0 : 32
    1 1 0 0 0 0 1 = a
반대로 a가 A가 되기 위해서 필요한 건 32번에 해당하는 2진수 값이 0이 되어야함
    1 1 0 0 0 0 1 : a
    0 1 0 0 0 0 0 : 32 
    1 0 0 0 0 0 1 = A
즉 대문자에 32를 OR한다면 32번째에 값이 1이 되고, 소문자에 32를 XOR한다면 32번째 값이 0이 된다.
 */
#include <iostream>

int main()
{
    char c1 = 'A';
    char c2 = 'a';
    
    std::cout << "대문자 -> 소문자 변환 (대문자 or 32)\n";
    for (c1; c1 <= 'Z'; c1++)
    {
        std::cout << c1 << " : " << char(c1|32) << '\n';
    }

    std::cout << "\n소문자 -> 대문자 변환 (소문자 xor 32)\n";
    for (c2; c2 <= 'z'; c2++)
    {
        std::cout << c2 << " : " << char(c2^32) << '\n';
    }

    return 0;
}